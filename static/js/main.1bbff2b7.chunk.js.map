{"version":3,"sources":["makeData.js","App.js","index.js"],"names":["range","len","arr","i","push","newPerson","statusChance","Math","random","firstName","namor","generate","words","numbers","lastName","age","floor","visits","progress","status","Styles","styled","div","withConfig","displayName","componentId","GlobalFilter","_ref","preGlobalFilteredRows","globalFilter","setGlobalFilter","count","length","react_default","a","createElement","value","onChange","e","target","undefined","placeholder","concat","style","fontSize","border","DefaultColumnFilter","_ref2","_ref2$column","column","filterValue","preFilteredRows","setFilter","SelectColumnFilter","_ref3","_ref3$column","id","options","React","useMemo","Set","forEach","row","add","values","Object","toConsumableArray","map","option","key","SliderColumnFilter","_ref4","_ref4$column","_React$useMemo","min","max","_React$useMemo2","slicedToArray","Fragment","type","parseInt","onClick","NumberRangeColumnFilter","_ref5","_ref5$column","_ref5$column$filterVa","_React$useMemo3","_React$useMemo4","display","val","old","arguments","width","marginRight","marginLeft","fuzzyTextFilterFn","rows","matchSorter","keys","Table","_ref6","columns","data","filterTypes","fuzzyText","text","filter","rowValue","String","toLowerCase","startsWith","defaultColumn","Filter","_useTable","useTable","initialState","pageIndex","useFilters","useGlobalFilter","useSortBy","usePagination","getTableProps","getTableBodyProps","headerGroups","prepareRow","page","canPreviousPage","canNextPage","pageOptions","pageCount","gotoPage","nextPage","previousPage","setPageSize","_useTable$state","state","pageSize","visibleColumns","headerGroup","getHeaderGroupProps","headers","getHeaderProps","getSortByToggleProps","isSorted","isSortedDesc","render","canFilter","colSpan","textAlign","getRowProps","cells","cell","getCellProps","className","disabled","defaultValue","Number","filterGreaterThan","autoRemove","App","Header","accessor","_len","lens","Array","_key","makeDataLevel","depth","d","objectSpread2","subRows","makeData","ReactDOM","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.1bbff2b7.chunk.js","sourcesContent":["import namor from 'namor'\n\nconst range = len => {\n  const arr = []\n  for (let i = 0; i < len; i++) {\n    arr.push(i)\n  }\n  return arr\n}\n\nconst newPerson = () => {\n  const statusChance = Math.random()\n  return {\n    firstName: namor.generate({ words: 1, numbers: 0 }),\n    lastName: namor.generate({ words: 1, numbers: 0 }),\n    age: Math.floor(Math.random() * 30),\n    visits: Math.floor(Math.random() * 100),\n    progress: Math.floor(Math.random() * 100),\n    status:\n      statusChance > 0.66\n        ? 'relationship'\n        : statusChance > 0.33\n        ? 'complicated'\n        : 'single',\n  }\n}\n\nexport default function makeData(...lens) {\n  const makeDataLevel = (depth = 0) => {\n    const len = lens[depth]\n    return range(len).map(d => {\n      return {\n        ...newPerson(),\n        subRows: lens[depth + 1] ? makeDataLevel(depth + 1) : undefined,\n      }\n    })\n  }\n\n  return makeDataLevel()\n}\n","import React from 'react'\nimport styled from 'styled-components'\nimport { useTable, useFilters, useGlobalFilter, useSortBy, usePagination } from 'react-table'\nimport matchSorter from 'match-sorter'\n\nimport makeData from './makeData'\n\nconst Styles = styled.div`\n  padding: 1rem;\n  display: block;\n  max-width: 100%;\n\n  .tableWrap {\n    display: block;\n    max-width: 100%;\n    overflow-x: scroll;\n    overflow-y: hidden;\n    border-bottom: 1px solid black;\n  }\n\n  table {\n    width: 100%;\n    border-spacing: 0;\n    border: 1px solid black;\n\n    tr {\n      :last-child {\n        td {\n          border-bottom: 0;\n        }\n      }\n    }\n    th,\n    td {\n      margin: 0;\n      padding: 0.5rem;\n      border-bottom: 1px solid black;\n      border-right: 1px solid black;\n      width: 1%;\n      &.collapse {\n        width: 0.0000000001%;\n      }\n\n      :last-child {\n        border-right: 0;\n      }\n    }\n  }\n\n  .pagination {\n    padding: 0.5rem;\n  }\n`\nfunction GlobalFilter({\n  preGlobalFilteredRows,\n  globalFilter,\n  setGlobalFilter,\n}) {\n  const count = preGlobalFilteredRows.length\n\n  return (\n    <span>\n      Search:{' '}\n      <input\n        value={globalFilter || ''}\n        onChange={e => {\n          setGlobalFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n        }}\n        placeholder={`${count} records...`}\n        style={{\n          fontSize: '1.1rem',\n          border: '0',\n        }}\n      />\n    </span>\n  )\n}\n\nfunction DefaultColumnFilter({\n  column: { filterValue, preFilteredRows, setFilter },\n}) {\n  const count = preFilteredRows.length\n\n  return (\n    <input\n      value={filterValue || ''}\n      onChange={e => {\n        setFilter(e.target.value || undefined) // Set undefined to remove the filter entirely\n      }}\n      placeholder={`Search ${count} records...`}\n    />\n  )\n}\n\nfunction SelectColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n  const options = React.useMemo(() => {\n    const options = new Set()\n    preFilteredRows.forEach(row => {\n      options.add(row.values[id])\n    })\n    return [...options.values()]\n  }, [id, preFilteredRows])\n\n  // Render a multi-select box\n  return (\n    <select\n      value={filterValue}\n      onChange={e => {\n        setFilter(e.target.value || undefined)\n      }}\n    >\n      <option value=\"\">All</option>\n      {options.map((option, i) => (\n        <option key={i} value={option}>\n          {option}\n        </option>\n      ))}\n    </select>\n  )\n}\n\nfunction SliderColumnFilter({\n  column: { filterValue, setFilter, preFilteredRows, id },\n}) {\n\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n    preFilteredRows.forEach(row => {\n      min = Math.min(row.values[id], min)\n      max = Math.max(row.values[id], max)\n    })\n    return [min, max]\n  }, [id, preFilteredRows])\n\n  return (\n    <>\n      <input\n        type=\"range\"\n        min={min}\n        max={max}\n        value={filterValue || min}\n        onChange={e => {\n          setFilter(parseInt(e.target.value, 10))\n        }}\n      />\n      <button onClick={e => setFilter(undefined)}>Off</button>\n    </>\n  )\n}\n\nfunction NumberRangeColumnFilter({\n  column: { filterValue = [], preFilteredRows, setFilter, id },\n}) {\n  const [min, max] = React.useMemo(() => {\n    let min = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n    let max = preFilteredRows.length ? preFilteredRows[0].values[id] : 0\n    preFilteredRows.forEach(row => {\n      min = Math.min(row.values[id], min)\n      max = Math.max(row.values[id], max)\n    })\n    return [min, max]\n  }, [id, preFilteredRows])\n\n  return (\n    <div\n      style={{\n        display: 'flex',\n      }}\n    >\n      <input\n        value={filterValue[0] || ''}\n        type=\"number\"\n        onChange={e => {\n          const val = e.target.value\n          setFilter((old = []) => [val ? parseInt(val, 10) : undefined, old[1]])\n        }}\n        placeholder={`Min (${min})`}\n        style={{\n          width: '70px',\n          marginRight: '0.5rem',\n        }}\n      />\n      to\n      <input\n        value={filterValue[1] || ''}\n        type=\"number\"\n        onChange={e => {\n          const val = e.target.value\n          setFilter((old = []) => [old[0], val ? parseInt(val, 10) : undefined])\n        }}\n        placeholder={`Max (${max})`}\n        style={{\n          width: '70px',\n          marginLeft: '0.5rem',\n        }}\n      />\n    </div>\n  )\n}\n\nfunction fuzzyTextFilterFn(rows, id, filterValue) {\n  return matchSorter(rows, filterValue, { keys: [row => row.values[id]] })\n}\n\n\nfuzzyTextFilterFn.autoRemove = val => !val\n\nfunction Table({ columns, data }) {\n\n  const filterTypes = React.useMemo(\n    () => ({\n      fuzzyText: fuzzyTextFilterFn,\n      text: (rows, id, filterValue) => {\n        return rows.filter(row => {\n          const rowValue = row.values[id]\n          return rowValue !== undefined\n            ? String(rowValue)\n                .toLowerCase()\n                .startsWith(String(filterValue).toLowerCase())\n            : true\n        })\n      },\n    }),\n    []\n  )\n\n  const defaultColumn = React.useMemo(\n    () => ({\n      Filter: DefaultColumnFilter,\n    }),\n    []\n  )\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    prepareRow,\n    page,\n    canPreviousPage,\n    canNextPage,\n    pageOptions,\n    pageCount,\n    gotoPage,\n    nextPage,\n    previousPage,\n    setPageSize,\n    state: { pageIndex, pageSize },\n    state,\n    visibleColumns,\n    preGlobalFilteredRows,\n    setGlobalFilter,\n  } = useTable({\n      columns,\n      data,\n      initialState: { pageIndex: 0 },\n      defaultColumn,\n      filterTypes,\n    },\n    useFilters,\n    useGlobalFilter,\n    useSortBy,\n    usePagination\n  )\n\n  // Render the UI for table\n  return (\n    <>\n    <table {...getTableProps()}>\n      <thead>\n        {headerGroups.map(headerGroup => (\n          <tr {...headerGroup.getHeaderGroupProps()}>\n            {headerGroup.headers.map(column => (\n              <th {...column.getHeaderProps()}>\n                <tr>\n                  <button {...column.getSortByToggleProps()}>\n                    {column.isSorted ? column.isSortedDesc ? `Sorted decreasing` : `Sorted increasing` : `Sort`}\n                  </button>\n                </tr>\n                {column.render('Header')}\n                <div>{column.canFilter ? column.render('Filter') : null}</div>\n              </th>\n            ))}\n          </tr>\n        ))}\n        <tr>\n            <th\n              colSpan={visibleColumns.length}\n              style={{\n                textAlign: 'left',\n              }}\n            >\n              <GlobalFilter\n                preGlobalFilteredRows={preGlobalFilteredRows}\n                globalFilter={state.globalFilter}\n                setGlobalFilter={setGlobalFilter}\n              />\n            </th>\n          </tr>\n      </thead>\n      <tbody {...getTableBodyProps()}>\n        {page.map((row, i) => {\n          prepareRow(row)\n          return (\n            <tr {...row.getRowProps()}>\n              {row.cells.map(cell => {\n                return <td {...cell.getCellProps()}>{cell.render('Cell')}</td>\n              })}\n            </tr>\n          )\n        })}\n      </tbody>\n    </table>\n    <div className=\"pagination\">\n        <button onClick={() => gotoPage(0)} disabled={!canPreviousPage}>\n          {'<<'}\n        </button>{' '}\n        <button onClick={() => previousPage()} disabled={!canPreviousPage}>\n          {'<'}\n        </button>{' '}\n        <button onClick={() => nextPage()} disabled={!canNextPage}>\n          {'>'}\n        </button>{' '}\n        <button onClick={() => gotoPage(pageCount - 1)} disabled={!canNextPage}>\n          {'>>'}\n        </button>{' '}\n        <span>\n          Page{' '}\n          <strong>\n            {pageIndex + 1} of {pageOptions.length}\n          </strong>{' '}\n        </span>\n        <span>\n          | Go to page:{' '}\n          <input\n            type=\"number\"\n            defaultValue={1}\n            onChange={e => {\n              const page = e.target.value ? Number(e.target.value) - 1 : 0\n              gotoPage(page)\n            }}\n            style={{ width: '100px' }}\n          />\n        </span>{' '}\n        <select\n          value={pageSize}\n          onChange={e => {\n            setPageSize(Number(e.target.value))\n          }}\n        >\n          {[10, 20, 30, 40, 50].map(pageSize => (\n            <option key={pageSize} value={pageSize}>\n              Show {pageSize}\n            </option>\n          ))}\n        </select>\n      </div>\n    </>\n  )\n}\n\nfunction filterGreaterThan(rows, id, filterValue) {\n  return rows.filter(row => {\n    const rowValue = row.values[id]\n    return rowValue >= filterValue\n  })\n}\n\nfilterGreaterThan.autoRemove = val => typeof val !== 'number'\n\n\nfunction App() {\n  const columns = React.useMemo(\n    () => [\n          {\n            Header: 'First Name',\n            accessor: 'firstName',\n          },\n          {\n            Header: 'Last Name',\n            accessor: 'lastName',\n            filter: 'fuzzyText',\n          },\n          {\n            Header: 'Age',\n            accessor: 'age',\n            Filter: SliderColumnFilter,\n            filter: 'equals',\n          },\n          {\n            Header: 'Visits',\n            accessor: 'visits',\n            Filter: NumberRangeColumnFilter,\n            filter: 'between',\n          },\n          {\n            Header: 'Status',\n            accessor: 'status',\n            Filter: SelectColumnFilter,\n            filter: 'includes',\n          },\n          {\n            Header: 'Profile Progress',\n            accessor: 'progress',\n            Filter: SliderColumnFilter,\n            filter: filterGreaterThan,\n          },\n    ],\n    []\n  )\n\n  const data = React.useMemo(() => makeData(200), [])\n\n  return (\n    <Styles>\n      <Table columns={columns} data={data} />\n    </Styles>\n  )\n}\n\nexport default App\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}